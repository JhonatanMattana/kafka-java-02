* parar docker compose
docker compose down

* subir docker compose
docker compose up -d

* parar compose (-v remove os volume também)
docker compose down

* listar topics
kafka-topics.sh --list --bootstrap-server localhost:9092

* acessar container do kafka
docker exec -it kafka-kafka-1 /bin/bash

* criar topic
kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic LOJA_NOVO_PEDIDO

* producers
kafka-console-producer.sh --broker-list localhost:9092 --topic LOJA_NOVO_PEDIDO

* consumers
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic LOJA_NOVO_PEDIDO --from-beginning
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic ECOMMERCE_NEW_ORDER --from-beginning

* abrir editor texto
vi config/server.properties

* Para alterar o tópico, podemos usar linha de comando.
bin/kafta-topics.sh --alter --zookeeper localhost:2181 --topic ECOMMERCE_NEW_ORDER --partitions 3

* analisar os grupos de consumo
bin/kafka-consumer-groups.sh --all-groups --bootstrap-server localhost:9092 --describe

* logs
docker logs -f kafka-kafka-1

* Vamos alterar o tópico com ECOMMERCE_NEW_ORDER usando --alter, informando que desejamos 3 partições. Não tem * problema, mantivemos 3 partições. Mas desejamos um fator de replicação de 2. Então, queremos que ele replique * em outro broker. 
bin/kafka-topics.sh --zookeeper localhost:2181 --alter --topic ECOMMERCE_NEW_ORDER --partitions 3 --replication-factor 2


bin/kafka-topics.sh --describe --bootstrap-server localhost:9093
bin/kafka-server-start.sh config/server.properties


* com devops, quando distribuímos isso para 10 máquinas do cluster, talvez façamos isso de uma maneira 
* automática, manualmente. Quando temos 2, 3, 4, 5, tudo bem, não há problema.
### Server Basics ###
# The id of the broker. This must be set to a unique integer for each broker.
broker.id=0
default.replication.factor = 2

* startar (iniciar) o zookeeper.
bin/zookeeper-server-start.sh  config/zookeeper.properties
